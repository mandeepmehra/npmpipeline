{"version":3,"sources":["../src/app.js"],"names":["app","set","path","join","__dirname","use","express","json","urlencoded","extended","req","res","next","header","indexRouter","apiRouter","err","locals","message","error","get","status"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAIA,GAAG,GAAG,0BAAV,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAjB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AAEAD,GAAG,CAACK,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAL,GAAG,CAACK,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAP,GAAG,CAACK,GAAJ,CAAQC,oBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAT,GAAG,CAACK,GAAJ,CAAQ,+BAAR;AACAL,GAAG,CAACK,GAAJ,CAAQC,8BAAeJ,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAmB;AACzBD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD,EAAAA,IAAI;AACL,CAJD;AAOAZ,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAaS,iBAAb;AACAd,GAAG,CAACK,GAAJ,CAAQ,MAAR,EAAgBU,eAAhB,E,CAEA;;AACAf,GAAG,CAACK,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAAC,4BAAY,GAAZ,CAAD,CAAJ;AACD,CAFD,E,CAIA;;AACAZ,GAAG,CAACK,GAAJ,CAAQ,UAASW,GAAT,EAAcN,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACM,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAP,EAAAA,GAAG,CAACM,MAAJ,CAAWE,KAAX,GAAmBT,GAAG,CAACV,GAAJ,CAAQoB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAL,EAAAA,GAAG,CAACU,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAV,EAAAA,GAAG,CAACJ,IAAJ,CAAS,OAAT;AACD,CARD;eAUeP,G","sourcesContent":["import createError from 'http-errors';\nimport express from 'express';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\n\nimport indexRouter from './routes/index';\nimport apiRouter from './routes/api';\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, '../views'));\napp.set('view engine', 'jade');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, '../public')));\n\napp.use((req, res, next) =>{\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\n\n\napp.use('/', indexRouter);\napp.use('/api', apiRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.json('error');\n});\n\nexport default app;\n"],"file":"app.js"}