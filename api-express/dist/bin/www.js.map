{"version":3,"sources":["../../src/bin/www.js"],"names":["debug","port","normalizePort","process","env","PORT","app","set","server","http","createServer","listen","on","onError","onListening","val","parseInt","isNaN","error","syscall","console","bind","code","exit","addr","address"],"mappings":"AAAA;AAEA;;AACA;;;;;AAIA;;AACA;;AACA;;;;AACA,IAAMA,KAAK,GAAG,uBAAS,oBAAT,CAAd;AAGA;;;;AAIA,IAAIC,IAAI,GAAGC,aAAa,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,MAArB,CAAxB;;AACAC,gBAAIC,GAAJ,CAAQ,MAAR,EAAgBN,IAAhB;AAEA;;;;;AAIA,IAAIO,MAAM,GAAGC,iBAAKC,YAAL,CAAkBJ,eAAlB,CAAb;AAEA;;;;;AAIAE,MAAM,CAACG,MAAP,CAAcV,IAAd;AACAO,MAAM,CAACI,EAAP,CAAU,OAAV,EAAmBC,OAAnB;AACAL,MAAM,CAACI,EAAP,CAAU,WAAV,EAAuBE,WAAvB;AAEA;;;;AAIA,SAASZ,aAAT,CAAuBa,GAAvB,EAA4B;AAC1B,MAAId,IAAI,GAAGe,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAnB;;AAEA,MAAIE,KAAK,CAAChB,IAAD,CAAT,EAAiB;AACf;AACA,WAAOc,GAAP;AACD;;AAED,MAAId,IAAI,IAAI,CAAZ,EAAe;AACb;AACA,WAAOA,IAAP;AACD;;AAED,SAAO,KAAP;AACD;AAED;;;;;AAIA,SAASY,OAAT,CAAiBK,KAAjB,EAAwB;AACtB,MAAIA,KAAK,CAACC,OAAN,KAAkB,QAAtB,EAAgC;AAC9BC,IAAAA,OAAO,CAACF,KAAR,CAAc,qBAAd;AACA,UAAMA,KAAN;AACD;;AAED,MAAIG,IAAI,GAAG,OAAOpB,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,IAFd,CANsB,CAUtB;;AACA,UAAQiB,KAAK,CAACI,IAAd;AACE,SAAK,QAAL;AACEF,MAAAA,OAAO,CAACF,KAAR,CAAcG,IAAI,GAAG,+BAArB;AACAlB,MAAAA,OAAO,CAACoB,IAAR,CAAa,CAAb;AACA;;AACF,SAAK,YAAL;AACEH,MAAAA,OAAO,CAACF,KAAR,CAAcG,IAAI,GAAG,oBAArB;AACAlB,MAAAA,OAAO,CAACoB,IAAR,CAAa,CAAb;AACA;;AACF;AACE,YAAML,KAAN;AAVJ;AAYD;AAED;;;;;AAIA,SAASJ,WAAT,GAAuB;AACrB,MAAIU,IAAI,GAAGhB,MAAM,CAACiB,OAAP,EAAX;AACA,MAAIJ,IAAI,GAAG,OAAOG,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,IAAI,CAACvB,IAFnB;AAGAD,EAAAA,KAAK,CAAC,kBAAkBqB,IAAnB,CAAL;AACD","sourcesContent":["#!/usr/bin/env node\n\n// bin/www.js\n/**\n * Module dependencies.\n */\n\nimport app from '../app';\nimport debugLib from 'debug';\nimport http from 'http';\nconst debug = debugLib('api-express:server');\n\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '3000');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    console.error(\"some error occured \");\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n"],"file":"www.js"}